syntax = "proto3";

option java_multiple_files = true;
package vn.com.fpt.jobservice.task_service.grpc;

import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";

service TaskService {
  rpc CreateTask(TaskCreateRequest) returns (TaskResponse);
  rpc UpdateTaskByTaskId(TaskUpdateRequestByTaskId) returns (TaskResponse);
  rpc UpdateTaskByTicketIdAndPhaseId(TaskUpdateRequestByTicketIdAndPhaseId) returns (TaskResponse);

  rpc TriggerTaskByTaskId(TaskTriggerRequestByTaskId) returns (TaskTriggerResponse);
  rpc TriggerTaskByTicketIdAndPhaseId(TaskTriggerRequestByTicketIdAndPhaseId) returns (TaskTriggerResponse);

  rpc ReadTaskActiveByTicketIdAndPhaseId(TaskTriggerRequestByTicketIdAndPhaseId) returns (TaskActiveResponse);

  rpc UnscheduleTaskByTicketIdAndPhaseId(UnscheduleTaskRequest) returns (TaskTriggerResponse);
}

message TaskGrpc {
  string id = 1;
  string name = 2;
  string tenantId = 3;
  int64 taskTypeId = 4;
  repeated google.protobuf.Any taskInputData = 5;
  int64 ticketId = 6;
  int64 phaseId = 7;
  string phaseName = 8;
  int64 subProcessId = 9;
  int64 integrationId = 10;
  string integrationName = 11;
  int32 retryCount = 12;
  int32 maxRetries = 13;
  int32 startStep = 14;
  string cronExpression = 15;
  google.protobuf.Timestamp nextInvocation = 16;
  google.protobuf.Timestamp prevInvocation = 17;
  string jobUUID = 18;
  string status = 19;
  bool active = 20;
  TaskTypeGrpc taskType = 21;
  google.protobuf.Timestamp createdAt = 22;
  google.protobuf.Timestamp modifiedAt = 23;
  string createdBy = 24;
  string modifiedBy = 25;
}

message TaskTypeGrpc {
  int64 id = 1;
  string className = 2;
  string name = 3;
  int64 processId = 4;
  string type = 5;
}

message TaskResponse {
  TaskGrpc task = 1;
}

message TaskCreateRequest {
  TaskGrpc task = 1;
}

message TaskUpdateRequestByTaskId {
  string id = 1;
  TaskGrpc task = 2;
}

message TaskUpdateRequestByTicketIdAndPhaseId {
  int64 ticketId = 1;
  int64 phaseId = 2;
  string tenantId = 3;
  TaskGrpc task = 4;
}

message TaskTriggerRequestByTaskId {
  string id = 1;
}

message TaskTriggerRequestByTicketIdAndPhaseId {
  int64 ticketId = 1;
  int64 phaseId = 2;
  string tenantId = 3;
}

message UnscheduleTaskRequest {
  string id = 1;
  int64 ticketId = 2;
  int64 phaseId = 3;
  string tenantId = 4;
  bool update = 5;
}

message TaskTriggerResponse {
  bool success = 1;
}

message TaskActiveResponse {
  bool active = 1;
}