
server.servlet.context-path=/job-service/api

spring.datasource.url=jdbc:mysql://10.15.119.205:3306/work?useSSL=false&createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=appuser
spring.datasource.password=Admin123$

#db.username= ${DB_USER:root}
#db.password= ${DB_PASS:123456}
#db.url= ${DB_URL:jdbc:${DB_TYPE:mysql}://${DB_HOSTNAME:localhost}:${DB_PORT:3306}/${DB_DATABASE:spro_chat}}${DB_URL_OPTION:?useSSL=false&createDatabaseIfNotExist=true&useUnicode=yes&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC}
#db.connection.timeout = ${CONNECTION_TIMEOUT:10000}
#db.idle.timeout = ${IDLE_TIMEOUT:600000}
#db.max.life.timeout = ${MAX_LIFE_TIMEOUT:1800000}
#driver.class= ${DB_DRIVER:com.mysql.jdbc.Driver}
#
#pool.min.size=${MIN_POOL_SIZE:10}
#pool.max.size=${MAX_POOL_SIZE:50}
#pool.max.idle=${MAX_IDLE_POOL:50}

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

spring.security.allowed-origins = http://localhost:4200,http://localhost:8081,http://localhost:9000


logging.level.org.hibernate = ERROR
logging.level.org.springframework.web: DEBUG

# chat-bot-name=${CHAT_BOT_NAME:Test local}
# mail-whitelist=${MAIL_WHITELIST:*}

# kafka.enabled=${KAFKA_ENABLED:true}
# kafka.environment=${KAFKA_ENV:Test}
# kafka.servers=${KAFKA_SERVERS_CONFIG:10.14.121.23}
# kafka.port=${KAFKA_PORT:29091}
# kafka.group-id=${KAFKA_GROUP_ID_CONFIG:spro-group}
# kafka.enable-auto-commit=${KAFKA_ENABLE_AUTO_COMMIT_CONFIG:false}
# kafka.auto-commit-interval=${KAFKA_AUTO_COMMIT_INTERVAL_MS_CONFIG:100}
# kafka.session-timeout=${KAFKA_SESSION_TIMEOUT_MS_CONFIG:15000}
# kafka.auto-offset-reset=${KAFKA_AUTO_OFFSET_RESET_CONFIG:earliest}
# kafka.chatBot-response=${KAFKA_RESPONSE:ChatBotResponse}${KAFKA_ENV:Test}
# kafka.chatBot-consumer=${KAFKA_CONSUMER:ChatBotConsumer}${KAFKA_ENV:Test}

spring.main.allow-circular-references=true
debug=false